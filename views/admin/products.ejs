<%- include("../partials/admin/sidebar") %>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shoqz Admin - Products</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', 'Arial', sans-serif;
        }
        
        body {
            display: flex;
            background: linear-gradient(135deg, #fff 0%, #764ba2 100%);
        }
        
        .main-content {
            flex: 1;
            padding: 20px;
            overflow-y: auto;
        }
        
        .page-header {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .page-title {
            font-size: 2.5rem;
            font-weight: 700;
            background: linear-gradient(135deg, #182f95 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 0.5rem;
        }
        
        .action-button {
            background-color: #5cd8c4;
            color: white;
            border: none;
            padding: 10px 16px;
            border-radius: 6px;
            font-weight: 500;
            cursor: pointer;
            display: flex;
            align-items: center;
            font-size: 14px;
        }
        
        .action-button i {
            margin-right: 6px;
            font-size: 16px;
        }
        
        .products-container {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }
        
        .products-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
        }
        
        .products-table th {
            text-align: left;
            padding: 12px 15px;
            border-bottom: 1px solid #eee;
            color: #777;
            font-weight: 500;
            font-size: 14px;
        }
        
        .products-table td {
            padding: 15px;
            border-bottom: 1px solid #eee;
            vertical-align: middle;
        }
        
        .product-name {
            font-weight: 500;
            color: #333;
        }
        
        .product-img {
            width: 60px;
            height: 60px;
            border-radius: 6px;
            object-fit: cover;
        }
        
        .category-badge {
            background-color: #e6f9f7;
            color: #5cd8c4;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 500;
        }
        
        .product-price {
            font-weight: 500;
            color: #333;
        }
        
        .product-size {
            color: #555;
        }
        
        .size-quantity-container {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }
        
        .size-info {
            background-color: #f0f8ff;
            color: #4387ff;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 500;
            text-align: center;
        }
        
        .quantity-info {
            background-color: #fff4e6;
            color: #ff9843;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 500;
            text-align: center;
        }
        
        .status-badge {
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 500;
        }
        
        .status-active {
            background-color: #e6fff0;
            color: #43ff84;
        }
        
        .status-inactive {
            background-color: #ffe6e6;
            color: #ff4343;
        }
        
        .action-icon {
            width: 32px;
            height: 32px;
            border-radius: 6px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            margin-right: 5px;
            font-size: 16px;
        }
        
        .edit-icon {
            background-color: #fff4e6;
            color: #ff9843;
        }
        
        .delete-icon {
            background-color: #ffe6e6;
            color: #ff4343;
        }
        
        .toggle-icon {
            background-color: #e6f0ff;
            color: #4387ff;
        }
        
        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 30px;
            gap: 5px;
        }
        
        .page-item {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            text-decoration: none;
            color: #333;
            transition: all 0.2s ease;
        }
        
        .page-item:hover {
            background-color: #f5f5f5;
        }
        
        .page-item.active {
            background-color: #4CAF50;
            color: white;
            border-color: #4CAF50;
        }
        
        .page-nav {
            background-color: #f9f9f9;
        }
        
        .page-ellipsis {
            padding: 8px 12px;
            color: #777;
        }
        
        .search-container {
            display: flex;
            margin-bottom: 15px;
        }
        
        .search-input {
            flex: 1;
            padding: 10px 15px;
            border: 1px solid #eee;
            border-radius: 6px;
            font-size: 14px;
            outline: none;
        }
        
        .search-input:focus {
            border-color: #5cd8c4;
        }
        
        .filter-select {
            padding: 10px 15px;
            margin-left: 10px;
            border: 1px solid #eee;
            border-radius: 6px;
            font-size: 14px;
            outline: none;
            cursor: pointer;
        }
        
        .filter-select:focus {
            border-color: #5cd8c4;
        }
        
        .offer-badge {
            background-color: #ffe6e6;
            color: #ff4343;
            padding: 3px 8px;
            border-radius: 4px;
            font-size: 11px;
            font-weight: 500;
            margin-left: 5px;
        }
        
        .original-price {
            text-decoration: line-through;
            color: #999;
            font-size: 12px;
            margin-left: 5px;
        }
        
        .toggle-button {
            padding: 6px 12px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 500;
            border: none;
            cursor: pointer;
            color: white;
            margin-right: 5px;
        }
        
        .list-button {
            background-color: #43ff84;
        }
        
        .unlist-button {
            background-color: #ff4343;
        }

        /* NEW: Product Offer Styles */
        .offer-action-btn {
            padding: 6px 12px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 500;
            border: none;
            cursor: pointer;
            color: white;
            margin-right: 5px;
        }
        
        .add-offer-btn {
            background-color: #28a745;
        }
        
        .remove-offer-btn {
            background-color: #dc3545;
        }
        
        .offer-modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }
        
        .offer-modal-content {
            background-color: white;
            margin: 15% auto;
            padding: 20px;
            border-radius: 8px;
            width: 400px;
            max-width: 90%;
        }
        
        .offer-form-group {
            margin-bottom: 15px;
        }
        
        .offer-form-label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
            color: #333;
        }
        
        .offer-form-input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
            outline: none;
        }
        
        .offer-form-input:focus {
            border-color: #5cd8c4;
        }
        
        .offer-form-buttons {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 20px;
        }
        
        .offer-btn-primary {
            background-color: #5cd8c4;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 500;
        }
        
        .offer-btn-secondary {
            background-color: #6c757d;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 500;
        }
        
        .close-modal {
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
            color: #aaa;
        }
        
        .close-modal:hover {
            color: #000;
        }
    </style>
</head>
<body>
    <!-- Include the sidebar -->
    
    <div class="main-content">
        <div class="page-header">
            <div class="page-title">Product Management</div>
            <a href="/admin/addProduct" class="action-button">
                <i>➕</i> Add New Product
            </a>
        </div>
        
        <div class="products-container">
             <div class="search-container">
               <form action="/admin/products" method="GET">
                        <input 
                            type="text" 
                            class="search-input" 
                            name="search" 
                            placeholder="Search products..." 
                            value="<%= search %>"
                        >
                        <span class="search-icon">🔍</span>
                    </form>
                <!-- <select id="categoryFilter" class="filter-select">
                    <option value="">All Categories</option>
                    <% if (typeof categories !== 'undefined' && categories.length > 0) { %>
                        <% categories.forEach(category => { %>
                        <option value="<%= category._id %>"><%= category.name %></option>
                        <% }); %>
                    <% } %>
                </select> -->
                <!-- <select id="statusFilter" class="filter-select">
                    <option value="">All Status</option>
                    <option value="active">Active</option>
                    <option value="inactive">Inactive</option>
                </select> -->
            </div> 
            
            <table class="products-table">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Category</th>
                        <th>Price</th>
                        <th>Size</th>
                        <th>Quantity</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% products?.forEach(product => { %>
                    <tr>
                        <td>
                            <div style="display: flex; align-items: center;">
                                <!-- <img src="<%= product?.images?.[0] || product?.productImage?.[0] %>" alt="<%= product.productName %>" class="product-img"> -->
                                <div class="product-name" style="margin-left: 12px;"><%= product.productName %></div>
                            </div>
                        </td>
                        <td><span class="category-badge"><%= product?.category?.name %></span></td>
                        <td class="product-price">
                            $<%= product?.regularPrice %>
                            <% if (product.productOffer > 0 || product.categoryoffer > 0) { %>
                                <span class="offer-badge">
                                    <% if (product.productOffer > 0 && product.categoryoffer > 0) { %>
                                        <%= Math.max(product.productOffer, product.categoryoffer) %>% OFF
                                    <% } else if (product.productOffer > 0) { %>
                                        <%= product.productOffer %>% OFF
                                    <% } else { %>
                                        <%= product.categoryoffer %>% OFF
                                    <% } %>
                                </span>
                                <span class="original-price">$<%= product.salePrice.toFixed(2) %></span>
                            <% } %>
                        </td>
                            <%= console.log(product.sizes[0].size) %>
                        <td>
                            <div class="size-quantity-container">
                                <span class="size-info"><%= product?.sizes[0]?.size %></span>
                            </div>
                        </td>
                        <td>
                            <div class="size-quantity-container">
                                <span class="quantity-info"><%= product?.sizes[0]?.quantity %></span>
                            </div>
                        </td>
                        <td>
                            <%=console.log(product.status,'sfdf')%>
                            <% if(product.status==="Available") { %>
                                <span class="status-badge status-active">Active</span>
                            <% } else { %>
                                <span class="status-badge status-inactive">Inactive</span>
                            <% } %>
                        </td>
                        <td>
                            <!-- Existing toggle button -->
                            <% if(!product.isBlocked) { %>
                                <button class="toggle-button unlist-button" onclick="toggleStatus('<%= product._id %>', true)">Unlist</button>
                            <% } else { %>
                                <button class="toggle-button list-button" onclick="toggleStatus('<%= product._id %>', false)">List</button>
                            
                                <% } %>
                            
                            <!-- NEW: Offer management buttons -->
                            
                            <% if (product.productOffer && product.productOffer > 0) { %>
                                <button class="offer-action-btn add-offer-btn" onclick="editProductOffer('<%= product._id %>','<%= product.productOffer.offer %>')">Edit Offer</button>
                                <button class="offer-action-btn remove-offer-btn" onclick="removeProductOffer('<%= product._id %>')">Remove Offer</button>
                            <% } else { %>
                                <button class="offer-action-btn add-offer-btn" onclick=" addProductOffer('<%= product._id %>','%= product.productOffer %>||0')">Add Offer</button>
                                                       <%=console.log(product.productOffer,'sfdfkh')%>

                                <% } %>
                            <!-- Existing edit and delete buttons -->
                            <a href="/admin/updateProduct?productId=<%= product._id %>" class="action-icon edit-icon">✏️</a>
                            <a href="#" class="action-icon delete-icon" onclick="confirmDelete('<%= product._id %>')">🗑️</a>
                        </td>
                    </tr>
                    <% }) %>
                </tbody>
            </table>
            
            <% if (products?.length === 0) { %>
            <div style="text-align: center; padding: 30px 0; color: #777;">
                No products found. Add a new product to get started.
            </div>
            <% } %>

            <div class="pagination">
    <% if (typeof totalPages !== 'undefined' && typeof currentPage !== 'undefined') { %>
        <% if (currentPage > 1) { %>
            <a href="/admin/products?page=<%= currentPage - 1 %>" class="page-item page-nav">&laquo; Prev</a>
        <% } %>
        
        <% 
        // Display a reasonable number of page links
        let startPage = Math.max(1, currentPage - 2);
        let endPage = Math.min(totalPages, startPage + 4);
        
        // Adjust if we're near the end
        if (endPage - startPage < 4 && startPage > 1) {
            startPage = Math.max(1, endPage - 4);
        }
        
        // Show first page if we're not starting from page 1
        if (startPage > 1) { %>
            <a href="/admin/products?page=1" class="page-item">1</a>
            <% if (startPage > 2) { %>
                <span class="page-ellipsis">...</span>
            <% } %>
        <% } %>
        
        <% for(let i = startPage; i <= endPage; i++) { %>
            <a href="/admin/products?page=<%= i %>" class="page-item <%= currentPage == i ? 'active' : '' %>"><%= i %></a>
        <% } %>
        
        <% if (endPage < totalPages) { %>
            <% if (endPage < totalPages - 1) { %>
                <span class="page-ellipsis">...</span>
            <% } %>
            <a href="/admin/products?page=<%= totalPages %>" class="page-item"><%= totalPages %></a>
        <% } %>
        
        <% if (currentPage < totalPages) { %>
            <a href="/admin/products?page=<%= currentPage + 1 %>" class="page-item page-nav">Next &raquo;</a>
        <% } %>
    <% } %>
</div>
        </div>
    </div>

    <!-- NEW: Offer Modal -->
    <div id="offerModal" class="offer-modal">
        <div class="offer-modal-content">
            <span class="close-modal">&times;</span>
            <h3 id="offerModalTitle">Add Product Offer</h3>
            <form id="offerForm">
                <div class="offer-form-group">
                    <label class="offer-form-label" for="offerPercentage">Offer Percentage (%)</label>
                    <input type="number" id="offerPercentage" class="offer-form-input" min="1" max="90" required>
                </div>
                <div class="offer-form-group">
                    <label class="offer-form-label" for="offerDescription">Description (Optional)</label>
                    <input type="text" id="offerDescription" class="offer-form-input" placeholder="e.g., Special Sale, Flash Deal">
                </div>
                <div class="offer-form-buttons">
                    <button type="button" class="offer-btn-secondary" onclick="closeOfferModal()">Cancel</button>
                    <button type="submit" class="offer-btn-primary">Save Offer</button>
                </div>
            </form>
        </div>
    </div>

    <script>

        document.addEventListener('DOMContentLoaded', function() {
  
  const updatePaginationLinks = () => {
    const search = document.getElementById('searchInput')?.value;
    const categoryFilter = document.getElementById('categoryFilter')?.value;
    const statusFilter = document.getElementById('statusFilter')?.value;
    
    const paginationLinks = document.querySelectorAll('.pagination .page-item');
    
    paginationLinks.forEach(link => {
      const pageNum = link.textContent;
      let url = `/admin/products?page=${pageNum}`;
      
      if (search) url += `&search=${encodeURIComponent(search)}`;
      if (categoryFilter) url += `&category=${encodeURIComponent(categoryFilter)}`;
      if (statusFilter) url += `&status=${encodeURIComponent(statusFilter)}`;
      
      link.setAttribute('href', url);
    });
  };
  
  // Initialize pagination links
  updatePaginationLinks();
  
  // Update links when filters change
  document.getElementById('searchInput')?.addEventListener('input', updatePaginationLinks);
  document.getElementById('categoryFilter')?.addEventListener('change', updatePaginationLinks);
  document.getElementById('statusFilter')?.addEventListener('change', updatePaginationLinks);
});

        // Function to handle product deletion
        function confirmDelete(productId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "This product will be permanently deleted!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#ff4343',
                cancelButtonColor: '#777',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    deleteProduct(productId);
                }
            });
        }
        
        function deleteProduct(productId) {
            fetch(`/admin/products/delete/${productId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: 'Deleted!',
                        text: data.message,
                        icon: 'success'
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: data.message,
                        icon: 'error'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'Failed to delete product',
                    icon: 'error'
                });
            });
        }
        
        // Function to toggle product status (list/unlist)
        function toggleStatus(productId, setIsBlocked) {
            const action = setIsBlocked ? 'unlist' : 'list';
            
            Swal.fire({
                title: `${action.charAt(0).toUpperCase() + action.slice(1)} Product?`,
                text: `This product will be ${action}ed.`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#5cd8c4',
                cancelButtonColor: '#777',
                confirmButtonText: `Yes, ${action} it!`
            }).then((result) => {
                if (result.isConfirmed) {
                    updateProductStatus(productId);
                }
            });
        }
        
        function updateProductStatus(productId) {
            fetch(`/admin/products/toggle-status/${productId}`, {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: 'Updated!',
                        text: data.message,
                        icon: 'success'
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: data.message,
                        icon: 'error'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'Failed to update product status',
                    icon: 'error'
                });
            });
        }

        // NEW: Product Offer Management Functions
        let currentProductId = null;

        // Function to open offer modal
        function openOfferModal(productId, currentOffer = 0) {
            currentProductId = productId;
            const modal = document.getElementById('offerModal');
            const title = document.getElementById('offerModalTitle');
            const percentage = document.getElementById('offerPercentage');
            
            if (currentOffer > 0) {
                title.textContent = 'Edit Product Offer';
                percentage.value = currentOffer;
            } else {
                title.textContent = 'Add Product Offer';
                percentage.value = '';
            }
            
            modal.style.display = 'block';
        }

        // Function to close offer modal
        function closeOfferModal() {
            const modal = document.getElementById('offerModal');
            modal.style.display = 'none';
            document.getElementById('offerForm').reset();
            currentProductId = null;
        }

        // Function to add/update product offer
    async    function addProductOffer(productId, currentOffer ) {
            openOfferModal(productId, currentOffer);
    }

        // Function to remove product offer
      async function removeProductOffer(productId) {
    try {
        const response = await fetch(`removeProductOffer/delete/${productId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json' // typo fixed
            },
            body: JSON.stringify({ productId })
        });

        const data = await response.json();

        if (data.success) {
            Swal.fire({
                title: 'Success!',
                text: data.message,
                icon: 'success'
            }).then(() => {
                window.location.reload();
            });
        } else {
            Swal.fire({
                title: 'Error!',
                text: data.message || 'Failed to remove product offer',
                icon: 'error'
            });
        }
    }
     catch (error) {
        // console.error('Error:', error);
        // Swal.fire({
        //     title: 'Error!',
        //     text: 'Something went wrong while removing the product offer',
        //     icon: 'error'
        // });
    }
}

        // Function to update product offer via API
     async   function updateProductOffer(productId, offerPercentage, description = '') {
        try{
            console.log("chnadran family");
            
      const response =   await   fetch(`/admin/products/update-offer/${productId}`, {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    productOffer: offerPercentage,
                    offerDescription: description
                })
            })
            console.log(offerPercentage,"anshi sadana");
            console.log(description,"ammu kumr");
            
            
            console.log(response,"chnadran sharun");
            
            const data = await response.json()
            console.log(data,"chandran sravan");
            
             if (data.success) {
            Swal.fire({
                title: 'Success!',
                text: data.message,
                icon: 'success'
            }).then(() => {
                window.location.reload();
            });
        } else {
            Swal.fire({
                title: 'Error!',
                text: data.message || 'Failed to update offer',
                icon: 'error'
            });
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            title: 'Error!',
            text: 'Failed to update product offer',
            icon: 'error'
        });
    }
} 

        // Handle offer modal events
        document.addEventListener('DOMContentLoaded', function() {
            const offerForm = document.getElementById('offerForm');
            const modal = document.getElementById('offerModal');
            const closeBtn = document.querySelector('.close-modal');

            // Close modal when clicking close button
            if (closeBtn) {
                closeBtn.onclick = function() {
                    closeOfferModal();
                }
            }

            // Close modal when clicking outside
            window.onclick = function(event) {
                if (event.target == modal) {
                    closeOfferModal();
                }
            }

            // Handle offer form submission
            if (offerForm) {
                offerForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    
                    const percentage = document.getElementById('offerPercentage').value;
                    const description = document.getElementById('offerDescription').value;
                    
                    if (percentage < 1 || percentage > 90) {
                        Swal.fire({
                            title: 'Invalid Percentage',
                            text: 'Offer percentage must be between 1% and 90%',
                            icon: 'error'
                        });
                        return;
                    }
                    
                    updateProductOffer(currentProductId, parseInt(percentage), description);
                    closeOfferModal();
                });
            }
        });
    </script>
</body>
</html>