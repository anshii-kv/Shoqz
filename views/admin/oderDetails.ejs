<%-include("../../views/partials/admin/sidebar")%>

</head>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Management</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f5f5;
            color: #333;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 30px;
            text-align: center;
        }

        .header h2 {
            color: #2c3e50;
            font-size: 2.5rem;
            margin-bottom: 10px;
        }

        .header p {
            color: #7f8c8d;
            font-size: 1.1rem;
        }

        .search-filter-section {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }

        .search-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .search-group {
            display: flex;
            flex-direction: column;
        }

        .search-group label {
            margin-bottom: 5px;
            font-weight: 600;
            color: #2c3e50;
        }

        .search-group input,
        .search-group select {
            padding: 10px;
            border: 2px solid #e0e0e0;
            border-radius: 5px;
            font-size: 14px;
            transition: border-color 0.3s;
        }

        .search-group input:focus,
        .search-group select:focus {
            outline: none;
            border-color: #0095ff;
        }

        .button-group {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 600;
            transition: all 0.3s;
        }

        .btn-primary {
            background: #0095ff;
            color: white;
        }

        .btn-primary:hover {
            background: #0075cc;
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-secondary:hover {
            background: #545b62;
        }

        .btn-info {
            background: #17a2b8;
            color: white;
        }

        .btn-info:hover {
            background: #138496;
        }

        .btn-success {
            background: #28a745;
            color: white;
        }

        .btn-success:hover {
            background: #218838;
        }

        .btn-sm {
            padding: 5px 10px;
            font-size: 12px;
        }

        .orders-table {
            width: 100%;
            background: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .orders-table th {
            background: #2c3e50;
            color: white;
            padding: 15px;
            text-align: left;
            font-weight: 600;
            cursor: pointer;
            transition: background 0.3s;
        }

        .orders-table th:hover {
            background: #34495e;
        }

        .orders-table td {
            padding: 15px;
            border-bottom: 1px solid #e0e0e0;
        }

        .orders-table tr:hover {
            background: #f8f9fa;
        }

        .status-badge {
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .status-pending {
            background: #fff3cd;
            color: #856404;
        }

        .status-shipped {
            background: #d4edda;
            color: #155724;
        }

        .status-out-for-delivery {
            background: #cce5ff;
            color: #004085;
        }

        .status-delivered {
            background: #d1ecf1;
            color: #0c5460;
        }

        .status-cancelled {
            background: #f8d7da;
            color: #721c24;
        }

        .status-return {
            background: #e2e3e5;
            color: #383d41;
        }

        .status-waiting.for.approval {
            background: #ffeaa7;
            color: #2d3436;
        }

        .text-center {
            text-align: center;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }

        .modal-content {
            background-color: white;
            margin: 5% auto;
            padding: 0;
            border-radius: 10px;
            width: 90%;
            max-width: 800px;
            max-height: 80vh;
            overflow-y: auto;
        }

        .modal-header {
            background: #2c3e50;
            color: white;
            padding: 20px;
            border-radius: 10px 10px 0 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .close {
            color: white;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .close:hover {
            opacity: 0.7;
        }

        .order-details {
            padding: 20px;
            border-bottom: 1px solid #e0e0e0;
        }

        .order-details:last-child {
            border-bottom: none;
        }

        .order-details h4 {
            color: #2c3e50;
            margin-bottom: 15px;
            font-size: 1.2rem;
        }

        .detail-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            padding: 5px 0;
        }

        .detail-label {
            font-weight: 600;
            color: #2c3e50;
        }

        .return-request {
            background: #fff3cd;
            padding: 20px;
            border-radius: 5px;
            margin-top: 20px;
        }

        .return-request h4 {
            color: #856404;
            margin-bottom: 10px;
        }

        .return-actions {
            margin-top: 15px;
            display: flex;
            gap: 10px;
        }
        
        /* Fixed Pagination Styles */
        .pagination {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 24px;
            background: linear-gradient(135deg, #f8fafc, #e2e8f0);
            border-top: 1px solid rgba(226, 232, 240, 0.6);
            margin-top: 20px;
        }
        
        .pagination-info {
            font-size: 14px;
            color: #64748b;
            font-weight: 500;
        }
        
        .pagination-buttons {
            display: flex;
            gap: 8px;
        }
        
        .pagination-button {
            width: 36px;
            height: 36px;
            display: flex;
            align-items: center;
            justify-content: center;
            border: 2px solid rgba(148, 163, 184, 0.2);
            border-radius: 8px;
            background: rgba(255, 255, 255, 0.8);
            color: #64748b;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            backdrop-filter: blur(10px);
        }
        
        .pagination-button:hover:not(.disabled) {
            border-color: #4f46e5;
            color: #4f46e5;
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(79, 70, 229, 0.2);
        }
        
        .pagination-button.active {
            background: linear-gradient(135deg, #4f46e5, #7c3aed);
            border-color: #4f46e5;
            color: white;
            box-shadow: 0 4px 12px rgba(79, 70, 229, 0.3);
        }
        
        .pagination-button.disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        
        .pagination-button.disabled:hover {
            transform: none;
            box-shadow: none;
            border-color: rgba(148, 163, 184, 0.2);
            color: #64748b;
        }
        
        .pagination-ellipsis {
            padding: 0 8px;
            color: #94a3b8;
            font-weight: 600;
        }

        @media (max-width: 768px) {
            .search-row {
                grid-template-columns: 1fr;
            }
            
            .button-group {
                flex-direction: column;
            }
            
            .orders-table {
                font-size: 14px;
            }
            
            .orders-table th,
            .orders-table td {
                padding: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h2>Order Management</h2>
            <p>Manage all customer orders</p>
        </div>

        

        <!-- Orders Table -->
        <div style="overflow-x: auto;">
            <table class="orders-table">
    <thead>
        <tr>
            <th>Order ID</th>
            <th>Date</th>
            <th>Customer</th>
            <th>Total</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="ordersTableBody">
        <% if (orders.length > 0) { %>
            <% orders.forEach((order) => { %>
                <tr data-order-id="<%= order._id %>" 
                    data-date="<%= order.Date ? order.Date.toISOString() : '' %>" 
                    data-customer="<%= order.deliveryDetails.fname %> <%= order.deliveryDetails.sname %>"
                    data-email="<%= order.deliveryDetails.email %>"
                    data-total="<%= order.subtotal %>"
                    data-status="<%= order.status %>">
                    <td><%= order.displayOrderId %></td>
                    <td><%= order.Date?.toDateString() %></td>
                    <td>
                        <%= order.deliveryDetails.fname %> <%= order.deliveryDetails.sname %><br>
                        <small><%= order.deliveryDetails.email %></small>
                    </td>
                    <td>₹<%= order.subtotal.toFixed(2) %></td>
                    <td><span class="status-badge status-<%= order.status %>"><%= order.status.replace('-', ' ') %></span></td>
                    <td>
                        <%=console.log(order.status,'dfdsfdsfdsfsdfsdfdsfsdf')%>

                        
                         <% if(order.status==="delivered"){%>
                            <span class="status-badge status-cancelled">Delivered</span>  
                        <% }else if(order.status==="cancelled"){%>
                            <span class="status-badge status-cancelled">Cancelled</span>  
    <% }else if (order.status === 'return') { %>
        Return
  <% } else if (order.status === 'waiting for approval') { %>
   

    <form method="POST" action="/admin/rejectOrder" style="display:inline; margin-left: 5px;">
        <input type="hidden" name="orderId" value="<%= order._id %>">
        <button type="submit" class="btn btn-danger btn-sm" onclick="rejectfn('<%= order._id %>')">
            Reject
        </button>
    </form>
<% }  else { %>
        <a href="/admin/viewOrder/<%=order._id%>" class="btn btn-info btn-sm">View</a>
        <form method="POST" action="/admin/changeStatus" style="display:inline;">
            <input type="hidden" name="orderId" value="<%= order._id %>">
       <select name="status" id="status-<%= order._id.toString() %>" style="margin-left: 5px; padding: 5px;">
    <option disabled value="">Change Status</option>

    <% if (order.status !== 'shipped' && order.status !== 'out-for-delivery') { %>
        <option value="pending" <%= order.status === 'pending' ? 'selected' : '' %>>Pending</option>
    <% } %>

    <% if (order.status !== 'out-for-delivery') { %>
        <option value="shipped" <%= order.status === 'shipped' ? 'selected' : '' %>>Shipped</option>
    <% } %>

    <option value="out-for-delivery" <%= order.status === 'out-for-delivery' ? 'selected' : '' %>>Out for Delivery</option>
    <option value="delivered" <%= order.status === 'delivered' ? 'selected' : '' %>>Delivered</option>
    <option value="cancelled" <%= order.status === 'cancelled' ? 'selected' : '' %>>Cancelled</option>
</select>


        </form>
        <!-- NEW CHECK BUTTON -->
        <button type="button"
        class="btn btn-warning btn-sm"
        onclick="checkOrder('<%= order._id %>', document.getElementById('status-<%= order._id %>').value)">
    Check
</button>
    <% } %>
</td>

                </tr>
            <% }) %>
        <% } else { %>
            <tr>
                <td colspan="6" class="text-center">No orders found</td>
            </tr>
        <% } %>
    </tbody>
</table>

        </div>

        <!-- Fixed Pagination -->
        <div class="pagination">
            <div class="pagination-info">
                Showing <%= (currentPage - 1) * 5 + 1 %> to <%= Math.min(currentPage * 5, totalOrders) %> of <%= totalOrders %> orders
            </div>
            <div class="pagination-buttons">
                <% if (currentPage > 1) { %>
                    <a href="/admin/orderDetails?page=<%= currentPage - 1 %>&limit=5" class="pagination-button">&laquo;</a>
                <% } else { %>
                    <span class="pagination-button disabled">&laquo;</span>
                <% } %>

                <% 
                let startPage = Math.max(1, currentPage - 2);
                let endPage = Math.min(totalPages, currentPage + 2);
                
                if (startPage > 1) { %>
                    <a href="/admin/orderDetails?page=1&limit=5" class="pagination-button">1</a>
                    <% if (startPage > 2) { %>
                        <span class="pagination-ellipsis">...</span>
                    <% } %>
                <% } %>

                <% for (let i = startPage; i <= endPage; i++) { %>
                    <% if (i === currentPage) { %>
                        <span class="pagination-button active"><%= i %></span>
                    <% } else { %>
                        <a href="/admin/orderDetails?page=<%= i %>&limit=5" class="pagination-button"><%= i %></a>
                    <% } %>
                <% } %>

                <% if (endPage < totalPages) { %>
                    <% if (endPage < totalPages - 1) { %>
                        <span class="pagination-ellipsis">...</span>
                    <% } %>
                    <a href="/admin/orderDetails?page=<%= totalPages %>&limit=5" class="pagination-button"><%= totalPages %></a>
                <% } %>

                <% if (currentPage < totalPages) { %>
                    <a href="/admin/orderDetails?page=<%= currentPage + 1 %>&limit=5" class="pagination-button">&raquo;</a>
                <% } else { %>
                    <span class="pagination-button disabled">&raquo;</span>
                <% } %>
            </div>
        </div>

        <!-- Back to Dashboard -->
        <a href="/admin/" style="display: block; text-align: center; margin-top: 20px; color: #0095ff; text-decoration: none; font-weight: 600;">Back to Dashboard</a>
    </div>

    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script>
        // Sorting variables
        let sortDirection = {};

        function sortTable(column) {
            const isAsc = sortDirection[column] !== 'asc';
            sortDirection[column] = isAsc ? 'asc' : 'desc';

            // Reset all sort indicators
            document.querySelectorAll('[id^="sort-"]').forEach(el => {
                el.textContent = '↕';
            });

            // Set current sort indicator
            document.getElementById(`sort-${column}`).textContent = isAsc ? '↑' : '↓';

            const tbody = document.getElementById('ordersTableBody');
            const rows = Array.from(tbody.querySelectorAll('tr'));
            
            // Don't sort if there's a "No orders found" message
            if (rows.length === 1 && rows[0].querySelector('td[colspan]')) {
                return;
            }

            rows.sort((a, b) => {
                let aVal, bVal;
                
                switch(column) {
                    case 'orderId':
                        aVal = a.dataset.orderId || '';
                        bVal = b.dataset.orderId || '';
                        break;
                    case 'date':
                        aVal = new Date(a.dataset.date || 0);
                        bVal = new Date(b.dataset.date || 0);
                        break;
                    case 'customer':
                        aVal = a.dataset.customer || '';
                        bVal = b.dataset.customer || '';
                        break;
                    case 'total':
                        aVal = parseFloat(a.dataset.total || 0);
                        bVal = parseFloat(b.dataset.total || 0);
                        break;
                    case 'status':
                        aVal = a.dataset.status || '';
                        bVal = b.dataset.status || '';
                        break;
                    default:
                        return 0;
                }

                if (aVal < bVal) return isAsc ? -1 : 1;
                if (aVal > bVal) return isAsc ? 1 : -1;
                return 0;
            });

            // Clear tbody and append sorted rows
            tbody.innerHTML = '';
            rows.forEach(row => tbody.appendChild(row));
        }

        function formatDate(dateString) {
            if (!dateString) return '';
            const date = new Date(dateString);
            return date.toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'short',
                day: 'numeric'
            });
        }

        async function approvefn(orderId) {
            try {
                const response = await fetch('/admin/approveOrder', {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ orderId })
                });
                const data = await response.json();
                console.log(data,"datass");
                
            
                const result = await response.text();
                console.log("Success", result);
                if (response.ok) {
                    location.reload(); 
                }
            } catch (error) {
                console.error("Error:", error);
            }
        }

        async function checkOrder(orderId,status) {
            console.log(orderId,'dfdf')
            console.log(status,"here the status is")
    try {
        const response = await fetch(`/admin/changeStatus`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body:JSON.stringify({orderId,status})

        });


        const result = await response.json();
       console.log(result,"result");
       
        if (result.message === "status has chnaged succesfully") {
    console.log("kukuku");
    
    Swal.fire({
        icon: 'success',
        title: 'Success',
        text: result.error || 'Succesfully changed'
    });

    setTimeout(() => {
        window.location.reload();
    }, 2000); 
}


       
    } catch (error) {
        console.error("Error fetching order:", error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text:'Unable to fetch order data'
        });
    }
}
    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</body>
</html>
</html>