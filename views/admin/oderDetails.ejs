 <%-include("../../views/partials/admin/sidebar")%>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shoqz - Order Management</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            background: linear-gradient(135deg, #fff 0%, #764ba2 100%);
            font-family: Arial, sans-serif;
            padding: 20px;
            min-height: 100vh;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            padding: 30px;
        }
        
        .header {
            text-align: center;
            margin-bottom: 30px;
        }
        
        .header h2 {
            color: #333;
            font-size: 24px;
            margin-bottom: 10px;
        }
        
        .search-filter-section {
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 20px;
        }
        
        .search-row {
            display: flex;
            gap: 15px;
            margin-bottom: 15px;
            flex-wrap: wrap;
        }
        
        .search-group {
            flex: 1;
            min-width: 200px;
        }
        
        .search-group label {
            display: block;
            margin-bottom: 5px;
            color: #555;
            font-weight: 600;
        }
        
        .search-group input,
        .search-group select {
            width: 100%;
            padding: 10px 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 14px;
        }
        
        .button-group {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        
        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 600;
        }
        
        .btn-primary {
            background-color: #0095ff;
            color: #fff;
        }
        
        .btn-secondary {
            background-color: #6c757d;
            color: #fff;
        }
        
        .btn-success {
            background-color: #28a745;
            color: #fff;
        }
        
        .btn-danger {
            background-color: #dc3545;
            color: #fff;
        }
        
        .btn-warning {
            background-color: #ffc107;
            color: #333;
        }
        
        .btn-info {
            background-color: #17a2b8;
            color: #fff;
        }
        
        .btn:hover {
            opacity: 0.9;
        }
        
        .orders-table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }
        
        .orders-table th,
        .orders-table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        
        .orders-table th {
            background-color: #f8f9fa;
            font-weight: 600;
            color: #333;
        }
        
        .orders-table tr:hover {
            background-color: #f8f9fa;
        }
        
        .status-badge {
            padding: 4px 8px;
            border-radius: 15px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
        }
        
        .status-pending {
            background-color: #ffc107;
            color: #333;
        }
        
        .status-shipped {
            background-color: #17a2b8;
            color: #fff;
        }
        
        .status-out-for-delivery {
            background-color: #fd7e14;
            color: #fff;
        }
        
        .status-delivered {
            background-color: #28a745;
            color: #fff;
        }
        
        .status-cancelled {
            background-color: #dc3545;
            color: #fff;
        }
        
        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
            margin-top: 20px;
        }
        
        .pagination button {
            padding: 8px 12px;
            border: 1px solid #ddd;
            background-color: #fff;
            cursor: pointer;
            border-radius: 5px;
        }
        
        .pagination button:hover {
            background-color: #f8f9fa;
        }
        
        .pagination button.active {
            background-color: #0095ff;
            color: #fff;
            border-color: #0095ff;
        }
        
        .pagination button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }
        
        .modal-content {
            background-color: #fff;
            margin: 5% auto;
            padding: 20px;
            border-radius: 8px;
            width: 90%;
            max-width: 600px;
            max-height: 80vh;
            overflow-y: auto;
        }
        
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #ddd;
        }
        
        .close {
            font-size: 24px;
            cursor: pointer;
            color: #666;
        }
        
        .close:hover {
            color: #000;
        }
        
        .order-details {
            margin-bottom: 20px;
        }
        
        .order-details h4 {
            color: #333;
            margin-bottom: 10px;
        }
        
        .detail-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 8px;
        }
        
        .detail-label {
            font-weight: 600;
            color: #555;
        }
        
        .return-request {
            background-color: #fff3cd;
            border: 1px solid #ffeaa7;
            padding: 15px;
            border-radius: 5px;
            margin-top: 15px;
        }
        
        .return-actions {
            display: flex;
            gap: 10px;
            margin-top: 15px;
        }
        
        @media (max-width: 768px) {
            .search-row {
                flex-direction: column;
            }
            
            .orders-table {
                font-size: 12px;
            }
            
            .orders-table th,
            .orders-table td {
                padding: 8px;
            }
        }
    </style>
</head>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Management</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f5f5;
            color: #333;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 30px;
            text-align: center;
        }

        .header h2 {
            color: #2c3e50;
            font-size: 2.5rem;
            margin-bottom: 10px;
        }

        .header p {
            color: #7f8c8d;
            font-size: 1.1rem;
        }

        .search-filter-section {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }

        .search-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .search-group {
            display: flex;
            flex-direction: column;
        }

        .search-group label {
            margin-bottom: 5px;
            font-weight: 600;
            color: #2c3e50;
        }

        .search-group input,
        .search-group select {
            padding: 10px;
            border: 2px solid #e0e0e0;
            border-radius: 5px;
            font-size: 14px;
            transition: border-color 0.3s;
        }

        .search-group input:focus,
        .search-group select:focus {
            outline: none;
            border-color: #0095ff;
        }

        .button-group {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 600;
            transition: all 0.3s;
        }

        .btn-primary {
            background: #0095ff;
            color: white;
        }

        .btn-primary:hover {
            background: #0075cc;
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-secondary:hover {
            background: #545b62;
        }

        .btn-info {
            background: #17a2b8;
            color: white;
        }

        .btn-info:hover {
            background: #138496;
        }

        .btn-success {
            background: #28a745;
            color: white;
        }

        .btn-success:hover {
            background: #218838;
        }

        .btn-sm {
            padding: 5px 10px;
            font-size: 12px;
        }

        .orders-table {
            width: 100%;
            background: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .orders-table th {
            background: #2c3e50;
            color: white;
            padding: 15px;
            text-align: left;
            font-weight: 600;
            cursor: pointer;
            transition: background 0.3s;
        }

        .orders-table th:hover {
            background: #34495e;
        }

        .orders-table td {
            padding: 15px;
            border-bottom: 1px solid #e0e0e0;
        }

        .orders-table tr:hover {
            background: #f8f9fa;
        }

        .status-badge {
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .status-pending {
            background: #fff3cd;
            color: #856404;
        }

        .status-shipped {
            background: #d4edda;
            color: #155724;
        }

        .status-out-for-delivery {
            background: #cce5ff;
            color: #004085;
        }

        .status-delivered {
            background: #d1ecf1;
            color: #0c5460;
        }

        .status-cancelled {
            background: #f8d7da;
            color: #721c24;
        }

        .status-return {
            background: #e2e3e5;
            color: #383d41;
        }

        .status-waiting.for.approval {
            background: #ffeaa7;
            color: #2d3436;
        }

        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 30px 0;
            gap: 20px;
        }

        .pagination button {
            padding: 10px 20px;
            border: 2px solid #0095ff;
            background: white;
            color: #0095ff;
            border-radius: 5px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s;
        }

        .pagination button:hover:not(:disabled) {
            background: #0095ff;
            color: white;
        }

        .pagination button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .pagination span {
            font-weight: 600;
            color: #2c3e50;
        }

        .text-center {
            text-align: center;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }

        .modal-content {
            background-color: white;
            margin: 5% auto;
            padding: 0;
            border-radius: 10px;
            width: 90%;
            max-width: 800px;
            max-height: 80vh;
            overflow-y: auto;
        }

        .modal-header {
            background: #2c3e50;
            color: white;
            padding: 20px;
            border-radius: 10px 10px 0 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .close {
            color: white;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .close:hover {
            opacity: 0.7;
        }

        .order-details {
            padding: 20px;
            border-bottom: 1px solid #e0e0e0;
        }

        .order-details:last-child {
            border-bottom: none;
        }

        .order-details h4 {
            color: #2c3e50;
            margin-bottom: 15px;
            font-size: 1.2rem;
        }

        .detail-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            padding: 5px 0;
        }

        .detail-label {
            font-weight: 600;
            color: #2c3e50;
        }

        .return-request {
            background: #fff3cd;
            padding: 20px;
            border-radius: 5px;
            margin-top: 20px;
        }

        .return-request h4 {
            color: #856404;
            margin-bottom: 10px;
        }

        .return-actions {
            margin-top: 15px;
            display: flex;
            gap: 10px;
        }

        @media (max-width: 768px) {
            .search-row {
                grid-template-columns: 1fr;
            }
            
            .button-group {
                flex-direction: column;
            }
            
            .orders-table {
                font-size: 14px;
            }
            
            .orders-table th,
            .orders-table td {
                padding: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h2>Order Management</h2>
            <p>Manage all customer orders</p>
        </div>

        <!-- Search and Filter Section -->
        <div class="search-filter-section">
            <div class="search-row">
                <div class="search-group">
                    <label for="searchOrder">Search Order ID</label>
                    <input type="text" id="searchOrder" placeholder="Enter order ID">
                </div>
                <!-- <div class="search-group">
                    <label for="searchCustomer">Search Customer</label>
                    <input type="text" id="searchCustomer" placeholder="Enter customer name/email">
                </div> -->
                <div class="search-group">
                    <label for="filterStatus">Filter by Status</label>
                    <select id="filterStatus">
                        <option value="">All Status</option>
                        <option value="pending">Pending</option>
                        <option value="shipped">Shipped</option>
                        <option value="out-for-delivery">Out for Delivery</option>
                        <option value="delivered">Delivered</option>
                        <option value="cancelled">Cancelled</option>
                    </select>
                </div>
                <!-- <div class="search-group">
                    <label for="dateFrom">Date From</label>
                    <input type="date" id="dateFrom">
                </div>
                <div class="search-group">
                    <label for="dateTo">Date To</label>
                    <input type="date" id="dateTo">
                </div> -->
            </div>
            <div class="button-group">
                <button class="btn btn-primary" onclick="searchOrders()">Search</button>
                <!-- <button class="btn btn-secondary" onclick="clearSearch()">Clear Search</button>
                <button class="btn btn-info" onclick="exportOrders()">Export Orders</button> -->
            </div>
        </div>

        <!-- Orders Table -->
        <div style="overflow-x: auto;">
            <table class="orders-table">
                <thead>
                    <tr>
                        <th onclick="sortTable('orderId')">Order ID <span id="sort-orderId">↕</span></th>
                        <th onclick="sortTable('date')">Date <span id="sort-date">↕</span></th>
                        <th onclick="sortTable('customer')">Customer <span id="sort-customer">↕</span></th>
                        <th onclick="sortTable('total')">Total <span id="sort-total">↕</span></th>
                        <th onclick="sortTable('status')">Status <span id="sort-status">↕</span></th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="ordersTableBody">
                    <% if (orders.length > 0) { %>
                        <% orders.forEach((order) => { %>
                            <tr data-order-id="<%= order._id %>" 
                                data-date="<%= order.Date ? order.Date.toISOString() : '' %>" 
                                data-customer="<%= order.deliveryDetails.fname %> <%= order.deliveryDetails.sname %>"
                                data-email="<%= order.deliveryDetails.email %>"
                                data-total="<%= order.subtotal %>"
                                data-status="<%= order.status %>">
                                <td><%= order._id %></td>
                                <td><%= order.Date?.toDateString() %></td>
                                <td>
                                    <%= order.deliveryDetails.fname %> <%= order.deliveryDetails.sname %><br>
                                    <small><%= order.deliveryDetails.email %></small>
                                </td>
                                <td>₹<%= order.subtotal.toFixed(2) %></td>
                                <td><span class="status-badge status-<%= order.status %>"><%= order.status.replace('-', ' ') %></span></td>
                                <td>
                                    <% if (order.status === 'return') { %>
                                        Return
                                    <% } else if (order.status === 'waiting for approval') { %>
                                        <form method="POST" action="/admin/approveOrder" style="display:inline;">
                                            <input type="hidden" name="orderId" value="<%= order._id %>">
<button type="submit" class="btn btn-success btn-sm" onclick="approvefn('<%= order._id %>')">Approve</button>
                                        </form>
                                    <% } else { %>
                                        <a href="/admin/orders/<%= order._id %>" class="btn btn-info btn-sm">View</a>
                                        <form method="POST" action="/admin/changeStatus" style="display:inline;">
                                            <input type="hidden" name="orderId" value="<%= order._id %>">
                                            <select name="status" onchange="this.form.submit()" style="margin-left: 5px; padding: 5px;">
                                                <option value="">Change Status</option>
                                                <option value="pending" <%= order.status === 'pending' ? 'selected' : '' %>>Pending</option>
                                                <option value="shipped" <%= order.status === 'shipped' ? 'selected' : '' %>>Shipped</option>
                                                <option value="out-for-delivery" <%= order.status === 'out-for-delivery' ? 'selected' : '' %>>Out for Delivery</option>
                                                <option value="delivered" <%= order.status === 'delivered' ? 'selected' : '' %>>Delivered</option>
                                                <option value="cancelled" <%= order.status === 'cancelled' ? 'selected' : '' %>>Cancelled</option>
                                            </select>
                                        </form>
                                    <% } %>
                                </td>
                            </tr>
                        <% }) %>
                    <% } else { %>
                        <tr>
                            <td colspan="6" class="text-center">No orders found</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <div class="pagination">
            <button onclick="changePage(-1)" id="prevBtn">Previous</button>
            <span id="pageInfo">Page 1 of 1</span>
            <button onclick="changePage(1)" id="nextBtn">Next</button>
        </div>

        <!-- Back to Dashboard -->
        <a href="/admin/dashboard" style="display: block; text-align: center; margin-top: 20px; color: #0095ff; text-decoration: none; font-weight: 600;">Back to Dashboard</a>
    </div>

    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script>
        // Pagination variables
        let currentPage = 1;
        const ordersPerPage = 10;
        let allRows = [];
        let filteredRows = [];
        let sortDirection = {};

        // Initialize pagination when page loads
        document.addEventListener('DOMContentLoaded', function() {
            initializePagination();
        });

        function initializePagination() {
            const tbody = document.getElementById('ordersTableBody');
            allRows = Array.from(tbody.querySelectorAll('tr'));
            filteredRows = [...allRows];
            
            // Only initialize pagination if there are orders
            if (allRows.length > 0 && !allRows[0].querySelector('td[colspan]')) {
                displayCurrentPage();
            } else {
                // Hide pagination if no orders
                document.querySelector('.pagination').style.display = 'none';
            }
        }

        function displayCurrentPage() {
            const tbody = document.getElementById('ordersTableBody');
            const startIndex = (currentPage - 1) * ordersPerPage;
            const endIndex = startIndex + ordersPerPage;
            
            // Hide all rows
            allRows.forEach(row => row.style.display = 'none');
            
            // Show only current page rows
            const rowsToShow = filteredRows.slice(startIndex, endIndex);
            rowsToShow.forEach(row => row.style.display = '');
            
            // If no rows to show, display "No orders found" message
            if (rowsToShow.length === 0 && filteredRows.length === 0) {
                tbody.innerHTML = '<tr><td colspan="6" class="text-center">No orders found</td></tr>';
                document.querySelector('.pagination').style.display = 'none';
            } else {
                document.querySelector('.pagination').style.display = 'flex';
            }
            
            updatePaginationInfo();
        }

        function updatePaginationInfo() {
            const totalPages = Math.ceil(filteredRows.length / ordersPerPage);
            document.getElementById('pageInfo').textContent = `Page ${currentPage} of ${totalPages}`;
            document.getElementById('prevBtn').disabled = currentPage === 1;
            document.getElementById('nextBtn').disabled = currentPage === totalPages || totalPages === 0;
        }

        function changePage(direction) {
            const totalPages = Math.ceil(filteredRows.length / ordersPerPage);
            const newPage = currentPage + direction;
            
            if (newPage >= 1 && newPage <= totalPages) {
                currentPage = newPage;
                displayCurrentPage();
            }
        }

        function searchOrders() {
            const searchOrder = document.getElementById('searchOrder').value.toLowerCase();
            const searchCustomer = document.getElementById('searchCustomer').value.toLowerCase();
            const filterStatus = document.getElementById('filterStatus').value;
            const dateFrom = document.getElementById('dateFrom').value;
            const dateTo = document.getElementById('dateTo').value;

            filteredRows = allRows.filter(row => {
                const orderId = row.dataset.orderId?.toLowerCase() || '';
                const customer = row.dataset.customer?.toLowerCase() || '';
                const email = row.dataset.email?.toLowerCase() || '';
                const status = row.dataset.status || '';
                const date = row.dataset.date || '';
                
                const matchesOrderId = !searchOrder || orderId.includes(searchOrder);
                const matchesCustomer = !searchCustomer || 
                    customer.includes(searchCustomer) || 
                    email.includes(searchCustomer);
                const matchesStatus = !filterStatus || status === filterStatus;
                
                let matchesDateFrom = true;
                let matchesDateTo = true;
                
                if (dateFrom && date) {
                    const orderDate = new Date(date).toISOString().split('T')[0];
                    matchesDateFrom = orderDate >= dateFrom;
                }
                
                if (dateTo && date) {
                    const orderDate = new Date(date).toISOString().split('T')[0];
                    matchesDateTo = orderDate <= dateTo;
                }

                return matchesOrderId && matchesCustomer && matchesStatus && matchesDateFrom && matchesDateTo;
            });

            currentPage = 1;
            displayCurrentPage();
        }

        function clearSearch() {
            document.getElementById('searchOrder').value = '';
            document.getElementById('searchCustomer').value = '';
            document.getElementById('filterStatus').value = '';
            document.getElementById('dateFrom').value = '';
            document.getElementById('dateTo').value = '';
            
            filteredRows = [...allRows];
            currentPage = 1;
            displayCurrentPage();
        }

        function sortTable(column) {
            const isAsc = sortDirection[column] !== 'asc';
            sortDirection[column] = isAsc ? 'asc' : 'desc';

            // Reset all sort indicators
            document.querySelectorAll('[id^="sort-"]').forEach(el => {
                el.textContent = '↕';
            });

            // Set current sort indicator
            document.getElementById(`sort-${column}`).textContent = isAsc ? '↑' : '↓';

            filteredRows.sort((a, b) => {
                let aVal, bVal;
                
                switch(column) {
                    case 'orderId':
                        aVal = a.dataset.orderId || '';
                        bVal = b.dataset.orderId || '';
                        break;
                    case 'date':
                        aVal = new Date(a.dataset.date || 0);
                        bVal = new Date(b.dataset.date || 0);
                        break;
                    case 'customer':
                        aVal = a.dataset.customer || '';
                        bVal = b.dataset.customer || '';
                        break;
                    case 'total':
                        aVal = parseFloat(a.dataset.total || 0);
                        bVal = parseFloat(b.dataset.total || 0);
                        break;
                    case 'status':
                        aVal = a.dataset.status || '';
                        bVal = b.dataset.status || '';
                        break;
                    default:
                        return 0;
                }

                if (aVal < bVal) return isAsc ? -1 : 1;
                if (aVal > bVal) return isAsc ? 1 : -1;
                return 0;
            });

            currentPage = 1;
            displayCurrentPage();
        }

        function exportOrders() {
            swal({
                title: "Export Orders",
                text: "Orders exported successfully!",
                icon: "success",
                button: "OK"
            });
        }

        function formatDate(dateString) {
            if (!dateString) return '';
            const date = new Date(dateString);
            return date.toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'short',
                day: 'numeric'
            });
        }
       async function approvefn(orderId) {
    try {
        const response = await fetch('/admin/approveOrder', {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({ orderId })
        });

        const result = await response.text();
        console.log("Success:", result);
        if (response.ok) {
            location.reload(); // or redirect if needed
        }
    } catch (error) {
        console.error("Error:", error);
    }
}

    </script>
</body>
</html>
</html>