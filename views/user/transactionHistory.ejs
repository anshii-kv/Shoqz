<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Wallet - ZENVOGUE</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.12/sweetalert2.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
        }

        .wallet-container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        .card {
            border: none;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
            border-radius: 20px;
            overflow: hidden;
            backdrop-filter: blur(10px);
            background: rgba(255, 255, 255, 0.95);
            margin-bottom: 2rem;
        }

        .back-button {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border: 2px solid #bdd5eb;
            border-radius: 25px;
            padding: 0.8rem 1.5rem;
            color: #bdd5eb;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 2rem;
        }

        .back-button:hover {
            background: #bdd5eb;
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(189, 213, 235, 0.3);
        }

        .wallet-header {
            background: linear-gradient(135deg, #bdd5eb 0%, #a9c1d6 100%);
            color: white;
            padding: 3rem 2rem;
            position: relative;
            overflow: hidden;
        }

        .wallet-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s ease;
        }

        .wallet-header:hover::before {
            left: 100%;
        }

        .wallet-info {
            position: relative;
            z-index: 2;
        }

        .wallet-title {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 1rem;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .wallet-balance {
            font-size: 3rem;
            font-weight: 800;
            margin-bottom: 0.5rem;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        }

        .wallet-created {
            opacity: 0.9;
            font-size: 1.1rem;
            font-weight: 500;
        }

        .wallet-icon {
            position: absolute;
            right: 2rem;
            top: 50%;
            transform: translateY(-50%);
            font-size: 4rem;
            opacity: 0.3;
            transition: all 0.3s ease;
        }

        .wallet-header:hover .wallet-icon {
            opacity: 0.5;
            transform: translateY(-50%) scale(1.1);
        }

        .transaction-header {
            background: linear-gradient(135deg, #bdd5eb 0%, #a9c1d6 100%);
            color: white;
            padding: 1.5rem 2rem;
            border: none;
        }

        .transaction-title {
            font-size: 1.8rem;
            font-weight: 700;
            margin: 0;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .transaction-count {
            font-size: 1rem;
            opacity: 0.9;
            margin-top: 0.5rem;
        }

        .transaction-body {
            padding: 0;
        }

        .transaction-table {
            margin: 0;
            border-collapse: separate;
            border-spacing: 0;
        }

        .transaction-table th {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            color: #333;
            font-weight: 600;
            padding: 1.2rem 1.5rem;
            border: none;
            position: sticky;
            top: 0;
            z-index: 1;
        }

        .transaction-table td {
            padding: 1.2rem 1.5rem;
            border: none;
            border-bottom: 1px solid #f1f3f4;
            vertical-align: middle;
        }

        .transaction-table tbody tr {
            transition: all 0.3s ease;
        }

        .transaction-table tbody tr:hover {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            transform: translateX(5px);
        }

        .transaction-date {
            color: #666;
            font-weight: 500;
        }

        .transaction-description {
            color: #333;
            font-weight: 600;
        }

        .transaction-order {
            color: #888;
            font-style: italic;
        }

        .transaction-amount {
            font-weight: 700;
            font-size: 1.1rem;
        }

        .amount-positive {
            color: #28a745;
        }

        .amount-negative {
            color: #dc3545;
        }

        .pagination-container {
            padding: 2rem;
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 1rem;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 0 0 20px 20px;
        }

        .pagination-info {
            color: #666;
            font-weight: 500;
        }

        .pagination-controls {
            display: flex;
            gap: 0.5rem;
        }

        .pagination-btn {
            width: 40px;
            height: 40px;
            border: 2px solid #bdd5eb;
            background: white;
            color: #bdd5eb;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
        }

        .pagination-btn:hover {
            background: #bdd5eb;
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(189, 213, 235, 0.3);
        }

        .pagination-btn.active {
            background: #bdd5eb;
            color: white;
        }

        .pagination-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .pagination-btn:disabled:hover {
            background: white;
            color: #bdd5eb;
            transform: none;
            box-shadow: none;
        }

        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            color: #666;
        }

        .empty-state i {
            font-size: 4rem;
            margin-bottom: 1rem;
            opacity: 0.3;
        }

        .empty-state h4 {
            margin-bottom: 1rem;
            color: #333;
        }

        .breadcrumb-section {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            padding: 1rem 0;
            margin-bottom: 2rem;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .breadcrumb {
            background: none;
            margin: 0;
        }

        .breadcrumb-item a {
            color: #bdd5eb;
            text-decoration: none;
            font-weight: 500;
        }

        .breadcrumb-item a:hover {
            color: #a9c1d6;
        }

        .breadcrumb-item.active {
            color: #6c757d;
        }

        @media (max-width: 768px) {
            .wallet-container {
                margin: 1rem auto;
                padding: 0 0.5rem;
            }

            .wallet-header {
                padding: 2rem 1rem;
            }

            .wallet-title {
                font-size: 2rem;
            }

            .wallet-balance {
                font-size: 2.5rem;
            }

            .wallet-icon {
                font-size: 3rem;
                right: 1rem;
            }

            .transaction-table {
                font-size: 0.9rem;
            }

            .transaction-table th,
            .transaction-table td {
                padding: 0.8rem 0.5rem;
            }

            .pagination-container {
                flex-direction: column;
                gap: 1rem;
            }

            .back-button {
                padding: 0.6rem 1rem;
                font-size: 0.9rem;
            }
        }

        @media (max-width: 576px) {
            .transaction-table th:nth-child(3),
            .transaction-table td:nth-child(3) {
                display: none;
            }
        }
    </style>
</head>
<body>
    <!-- Breadcrumb Section -->
    <section class="breadcrumb-section">
        <div class="container">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">Home</a></li>
                    <li class="breadcrumb-item"><a href="/dashboard">Dashboard</a></li>
                    <li class="breadcrumb-item active" aria-current="page">My Wallet</li>
                </ol>
            </nav>
        </div>
    </section>

    <!-- Wallet Container -->
    <div class="wallet-container">
        <a href="/profile" class="back-button">
            <i class="fas fa-arrow-left"></i>
            Back to Profile
        </a>

        <!-- Wallet Balance Card -->
        <div class="card">
            <div class="wallet-header">
                <div class="wallet-info">
                    <h1 class="wallet-title">
                        <i class="fas fa-wallet me-2"></i>
                        My Wallet
                    </h1>
                    <div class="wallet-balance">₹200.00</div>
                    <div class="wallet-created">Created on: 2025-07-14</div>
                </div>
                <div class="wallet-icon">
                    <i class="fas fa-coins"></i>
                </div>
            </div>
        </div>

        <!-- Transaction History Card -->
        <div class="card">
            <div class="transaction-header">
                <h2 class="transaction-title">
                    <i class="fas fa-history me-2"></i>
                    Transaction History
                </h2>
                <div class="transaction-count">Showing 1-2 of 2 transactions</div>
            </div>
            <div class="transaction-body">
                <div class="table-responsive">
                    <table class="table transaction-table">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Description</th>
                                <th>Order ID</th>
                                <th>Amount</th>
                            </tr>
                        </thead>
                        <tbody id="transactionTableBody">
                            <tr>
                                <td class="transaction-date">14/7/2025</td>
                                <td class="transaction-description">Referral bonus for referring ashmil</td>
                                <td class="transaction-order">N/A</td>
                                <td class="transaction-amount amount-positive">+₹100.00</td>
                            </tr>
                            <tr>
                                <td class="transaction-date">14/7/2025</td>
                                <td class="transaction-description">Registration bonus</td>
                                <td class="transaction-order">N/A</td>
                                <td class="transaction-amount amount-positive">+₹100.00</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="pagination-container">
                <div class="pagination-info">Page 1 of 1</div>
                <div class="pagination-controls">
                    <button class="pagination-btn active" onclick="goToPage(1)">1</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.12/sweetalert2.min.js"></script>
    <script>
        // Sample transaction data - replace with your actual data
        const transactions = [
            {
                date: "14/7/2025",
                description: "Referral bonus for referring ashmil",
                orderId: "N/A",
                amount: 100.00,
                type: "credit"
            },
            {
                date: "14/7/2025",
                description: "Registration bonus",
                orderId: "N/A",
                amount: 100.00,
                type: "credit"
            }
        ];

        const itemsPerPage = 10;
        let currentPage = 1;

        function renderTransactions() {
            const tbody = document.getElementById('transactionTableBody');
            const startIndex = (currentPage - 1) * itemsPerPage;
            const endIndex = startIndex + itemsPerPage;
            const pageTransactions = transactions.slice(startIndex, endIndex);

            if (pageTransactions.length === 0) {
                tbody.innerHTML = `
                    <tr>
                        <td colspan="4" class="empty-state">
                            <i class="fas fa-inbox"></i>
                            <h4>No Transactions Found</h4>
                            <p>You haven't made any transactions yet.</p>
                        </td>
                    </tr>
                `;
                return;
            }

            tbody.innerHTML = pageTransactions.map(transaction => `
                <tr>
                    <td class="transaction-date">${transaction.date}</td>
                    <td class="transaction-description">${transaction.description}</td>
                    <td class="transaction-order">${transaction.orderId}</td>
                    <td class="transaction-amount ${transaction.type === 'credit' ? 'amount-positive' : 'amount-negative'}">
                        ${transaction.type === 'credit' ? '+' : '-'}₹${transaction.amount.toFixed(2)}
                    </td>
                </tr>
            `).join('');
        }

        function renderPagination() {
            const totalPages = Math.ceil(transactions.length / itemsPerPage);
            const paginationInfo = document.querySelector('.pagination-info');
            const paginationControls = document.querySelector('.pagination-controls');

            // Update pagination info
            const startItem = (currentPage - 1) * itemsPerPage + 1;
            const endItem = Math.min(currentPage * itemsPerPage, transactions.length);
            paginationInfo.textContent = `Page ${currentPage} of ${totalPages}`;

            // Update transaction count in header
            const transactionCount = document.querySelector('.transaction-count');
            transactionCount.textContent = `Showing ${startItem}-${endItem} of ${transactions.length} transactions`;

            // Render pagination buttons
            let buttons = '';
            
            // Previous button
            if (currentPage > 1) {
                buttons += `<button class="pagination-btn" onclick="goToPage(${currentPage - 1})">
                    <i class="fas fa-chevron-left"></i>
                </button>`;
            }

            // Page numbers
            for (let i = 1; i <= totalPages; i++) {
                if (i === currentPage) {
                    buttons += `<button class="pagination-btn active" onclick="goToPage(${i})">${i}</button>`;
                } else if (i === 1 || i === totalPages || (i >= currentPage - 1 && i <= currentPage + 1)) {
                    buttons += `<button class="pagination-btn" onclick="goToPage(${i})">${i}</button>`;
                } else if (i === currentPage - 2 || i === currentPage + 2) {
                    buttons += `<span class="pagination-btn" style="border: none; cursor: default;">...</span>`;
                }
            }

            // Next button
            if (currentPage < totalPages) {
                buttons += `<button class="pagination-btn" onclick="goToPage(${currentPage + 1})">
                    <i class="fas fa-chevron-right"></i>
                </button>`;
            }

            paginationControls.innerHTML = buttons;
        }

        function goToPage(page) {
            const totalPages = Math.ceil(transactions.length / itemsPerPage);
            if (page >= 1 && page <= totalPages) {
                currentPage = page;
                renderTransactions();
                renderPagination();
            }
        }

        // Initialize the page
        document.addEventListener('DOMContentLoaded', function() {
            renderTransactions();
            renderPagination();
        });

        // Add smooth scrolling for better UX
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });
    </script>
</body>
</html>