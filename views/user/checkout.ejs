<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Checkout</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
        <style>
            .default-address-container {
                background-color: #f8f9fa;
                padding: 15px;
                border-radius: 8px;
                margin-bottom: 15px;
            }
            .address-item {
                padding: 10px;
                margin-bottom: 10px;
                border: 1px solid #ddd;
                border-radius: 5px;
                cursor: pointer;
            }
            .address-item:hover {
                background-color: #f0f0f0;
            }
            .address-item.selected {
                border-color: #007bff;
                background-color: #e7f1ff;
            }
            .default-badge {
                background-color: #28a745;
                color: white;
                padding: 2px 8px;
                border-radius: 12px;
                font-size: 12px;
                margin-left: 10px;
            }
            .payment-option {
                padding: 10px;
                border-radius: 5px;
                transition: background-color 0.2s;
            }
            .payment-option:hover {
                background-color: #f0f0f0;
            }
            .payment-option.selected {
                background-color: #e7f1ff;
                border: 1px solid #007bff;
            }
            .order-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
            }
            .progress-steps .col-4 {
                flex: 1 0 33.33%;
                max-width: 33.33%;
            }
            @media (max-width: 576px) {
                .progress-steps .col-4 {
                    flex: 1 0 100%;
                    max-width: 100%;
                    margin-bottom: 10px;
                }
            }
            .is-invalid {
                border-color: #dc3545 !important;
            }
            .invalid-feedback {
                display: none;
                font-size: 0.875rem;
                color: #dc3545;
            }
            .is-invalid ~ .invalid-feedback {
                display: block;
            }
        </style>
    </head>
    <body>
        <section style="background-color: #bddbeb; min-height: 100vh">
            <div class="container py-5">
                <div class="row">
                    <!-- Checkout Steps and Forms -->
                    <div class="col-lg-8">
                        <div class="card" style="border-radius: 15px">
                            <div class="card-body p-0">
                                <div class="p-4">
                                    <!-- Header -->
                                    <div class="d-flex justify-content-between align-items-center mb-4">
                                        <h1 class="fw-bold mb-0">Checkout</h1>
                                        <a href="/cart" class="text-decoration-none">
                                            <i class="fas fa-arrow-left me-2"></i>Back to Cart
                                        </a>
                                    </div>

                                    <!-- Progress Steps -->
                                    <div class="row mb-4 progress-steps">
                                        <div class="col-4">
                                            <div class="text-center">
                                                <div
                                                    class="rounded-circle bg-primary text-white d-inline-flex align-items-center justify-content-center"
                                                    style="width: 40px; height: 40px"
                                                >
                                                    <i class="fas fa-truck"></i>
                                                </div>
                                                <div class="mt-2">
                                                    <small class="text-primary fw-bold">Shipping</small>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-4">
                                            <div class="text-center">
                                                <div
                                                    class="rounded-circle bg-primary text-white d-inline-flex align-items-center justify-content-center"
                                                    style="width: 40px; height: 40px"
                                                >
                                                    <i class="fas fa-credit-card"></i>
                                                </div>
                                                <div class="mt-2">
                                                    <small class="text-primary fw-bold">Payment</small>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-4">
                                            <div class="text-center">
                                                <div
                                                    class="rounded-circle bg-primary text-white d-inline-flex align-items-center justify-content-center"
                                                    style="width: 40px; height: 40px"
                                                >
                                                    <i class="fas fa-check"></i>
                                                </div>
                                                <div class="mt-2">
                                                    <small class="text-primary fw-bold">Confirm</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Checkout Form -->
                                    <form id="checkoutForm">
                                        <!-- Shipping Information -->
                                        <div class="mb-4">
                                            <h4 class="mb-3"><i class="fas fa-truck me-2"></i>Shipping Information</h4>

                                            <!-- Default Address Display -->
                                            <div class="default-address-container">
                                                <div class="d-flex justify-content-between align-items-center mb-2">
                                                    <h6 class="fw-bold">Selected Shipping Address</h6>
                                                    <button
                                                        type="button"
                                                        class="btn btn-outline-primary btn-sm"
                                                        data-bs-toggle="modal"
                                                        data-bs-target="#selectAddressModal"
                                                    >
                                                        Change Address
                                                    </button>
                                                </div>
                                                <div id="selectedAddressDisplay">
                                                    <% if (defaultAddress) { %>
                                                    <input
                                                        type="hidden"
                                                        name="selectedAddress"
                                                        value="<%- JSON.stringify(defaultAddress) %>"
                                                    />
                                                    <p class="mb-1">
                                                        <strong
                                                            ><%= defaultAddress.fname %> <%= defaultAddress.sname %></strong
                                                        >
                                                    </p>
                                                    <p class="mb-1"><%= defaultAddress.email %></p>
                                                    <p class="mb-1"><%= defaultAddress.mobile %></p>
                                                    <p class="mb-1"><%= defaultAddress.address %></p>
                                                    <p class="mb-0">
                                                        <%= defaultAddress.city %> - <%= defaultAddress.pin %>
                                                    </p>
                                                    <% } else { %>
                                                    <p class="text-muted">No address selected. Please select an address.</p>
                                                    <% } %>
                                                </div>
                                            </div>

                                            <!-- Manual Address Input -->
                                            <div id="manualAddressInput" style="display: none">
                                                <div class="row">
                                                    <div class="col-md-6 mb-3">
                                                        <label for="fname" class="form-label">First Name *</label>
                                                        <input
                                                            type="text"
                                                            class="form-control"
                                                            id="fname"
                                                            name="fname"
                                                            required
                                                        />
                                                        <div class="invalid-feedback">First name is required.</div>
                                                    </div>
                                                    <div class="col-md-6 mb-3">
                                                        <label for="sname" class="form-label">Last Name *</label>
                                                        <input
                                                            type="text"
                                                            class="form-control"
                                                            id="sname"
                                                            name="sname"
                                                            required
                                                        />
                                                        <div class="invalid-feedback">Last name is required.</div>
                                                    </div>
                                                </div>
                                                <div class="mb-3">
                                                    <label for="email" class="form-label">Email Address *</label>
                                                    <input
                                                        type="email"
                                                        class="form-control"
                                                        id="email"
                                                        name="email"
                                                        required
                                                    />
                                                    <div class="invalid-feedback">Please enter a valid email address.</div>
                                                </div>
                                                <div class="mb-3">
                                                    <label for="mobile" class="form-label">Mobile Number *</label>
                                                    <input
                                                        type="tel"
                                                        class="form-control"
                                                        id="mobile"
                                                        name="mobile"
                                                        required
                                                    />
                                                    <div class="invalid-feedback">Mobile number is required.</div>
                                                </div>
                                                <div class="mb-3">
                                                    <label for="addressType" class="form-label">Address Type *</label>
                                                    <select
                                                        class="form-control"
                                                        id="addressType"
                                                        name="addressType"
                                                        required
                                                    >
                                                        <option value="">Select Type</option>
                                                        <option value="home">Home</option>
                                                        <option value="work">Work</option>
                                                        <option value="other">Other</option>
                                                    </select>
                                                    <div class="invalid-feedback">Please select an address type.</div>
                                                </div>
                                                <div class="mb-3">
                                                    <label for="address" class="form-label">Full Address *</label>
                                                    <textarea
                                                        class="form-control"
                                                        id="address"
                                                        name="address"
                                                        rows="3"
                                                        required
                                                    ></textarea>
                                                    <div class="invalid-feedback">Full address is required.</div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-6 mb-3">
                                                        <label for="city" class="form-label">City *</label>
                                                        <input
                                                            type="text"
                                                            class="form-control"
                                                            id="city"
                                                            name="city"
                                                            required
                                                        />
                                                        <div class="invalid-feedback">City is required.</div>
                                                    </div>
                                                    <div class="col-md-6 mb-3">
                                                        <label for="pin" class="form-label">Pincode *</label>
                                                        <input
                                                            type="text"
                                                            class="form-control"
                                                            id="pin"
                                                            name="pin"
                                                            required
                                                            maxlength="6"
                                                        />
                                                        <div class="invalid-feedback">
                                                            Please enter a valid 6-digit pincode.
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="mb-3">
                                                    <button
                                                        type="button"
                                                        class="btn btn-primary"
                                                        onclick="handleAddressSubmit(true)"
                                                    >
                                                        Save This Address
                                                    </button>
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Payment Method -->
                                        <div class="mb-4">
                                            <h4 class="mb-3"><i class="fas fa-credit-card me-2"></i>Payment Method</h4>

                                            <div class="row mb-3">
                                                <div class="col-md-6 mb-3">
                                                    <div class="payment-option" onclick="selectRazorpayPayment('card')">
                                                        <div class="form-check">
                                                            <input
                                                                class="form-check-input"
                                                                type="radio"
                                                                name="paymentMethod"
                                                                id="cardPayment"
                                                                value="card"
                                                            />
                                                            <label class="form-check-label" for="cardPayment">
                                                                <i class="fas fa-credit-card me-2"></i>Razorpay
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6 mb-3">
                                                    <div class="payment-option" onclick="selectPayment('cod')">
                                                        <div class="form-check">
                                                            <input
                                                                class="form-check-input"
                                                                type="radio"
                                                                name="paymentMethod"
                                                                id="codPayment"
                                                                value="cod"
                                                            />
                                                            <label class="form-check-label" for="codPayment">
                                                                <i class="fas fa-money-bill-wave me-2"></i>Cash on Delivery
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Terms and Conditions -->
                                        <div class="mb-4">
                                            <div class="form-check">
                                                <input
                                                    class="form-check-input"
                                                    type="checkbox"
                                                    id="termsAccepted"
                                                    required
                                                />
                                                <label class="form-check-label" for="termsAccepted">
                                                    I agree to the
                                                    <a href="#" class="text-decoration-none">Terms and Conditions</a> and
                                                    <a href="#" class="text-decoration-none">Privacy Policy</a>
                                                </label>
                                            </div>
                                        </div>

                                        <!-- Submit Button -->
                                        <button type="button" class="btn btn-success btn-lg w-100" onclick="orderSubmit()">
                                            <i class="fas fa-lock me-2"></i>Place Order
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Order Summary -->
                    <div class="col-lg-4">
                        <div class="card sticky-top" style="border-radius: 15px; top: 20px">
                            <div class="card-body">
                                <h4 class="fw-bold mb-4">Order Summary</h4>
                                <div id="orderItems">
                                    <% cartItems.forEach(item => { %>
                                    <div class="order-item mb-3">
                                        <div class="row align-items-center">
                                            <div class="col-6">
                                                <h6 class="mb-1"><%= item.name %></h6>
                                                <small class="text-muted">Qty: <%= item.quantity %></small><br />
                                                <small class="text-muted">Size: <%= item.size %></small>
                                            </div>
                                            <div class="col-3 text-end">
                                                <span class="fw-bold">₹<%= item.total %></span>
                                            </div>
                                        </div>
                                    </div>
                                    <% }) %>
                                </div>
                                <hr class="my-4" />
                                <div class="d-flex justify-content-between mb-2">
                                    <span>Subtotal</span>
                                    <span id="subtotalAmount">₹<%= subtotal %></span>
                                </div>
                                <div class="d-flex justify-content-between mb-2">
                                    <span>Delivery Charge</span>
                                    <span id="deliveryAmount">₹<%= shippingCharge %></span>
                                </div>
                                <div class="d-flex justify-content-between mb-2">
                                    <span>Discount</span>
                                    <span id="discountAmount">-₹<%= coupondiscount %></span>
                                </div>
                                <div class="mb-3 text-end">
    <button type="button" class="btn btn-outline-primary btn-sm" id="applyCouponBtn" data-bs-toggle="modal" data-bs-target="#couponModal">
        Apply Coupon
    </button>
</div>

                                <hr class="my-3" />
                                <div class="d-flex justify-content-between mb-3">
                                    <h5 class="fw-bold">Total</h5>
                                    <h5 class="fw-bold" id="totalAmount">
                                        ₹<%= subtotal + shippingCharge - coupondiscount %>
                                    </h5>
                                </div>
                                <div class="bg-light p-3 rounded">
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-truck text-primary me-2"></i>
                                        <div>
                                            <small class="fw-bold">Estimated Delivery</small>
                                            <br />
                                            <small class="text-muted">5-7 business days</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Select Address Modal -->
        <div
            class="modal fade"
            id="selectAddressModal"
            tabindex="-1"
            aria-labelledby="selectAddressModalLabel"
            aria-hidden="true"
        >
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="selectAddressModalLabel">
                            <i class="fas fa-map-marker-alt me-2"></i>Select Shipping Address
                        </h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div id="addressList">
                            <% if (userAddresses && userAddresses.length > 0) { %> <% userAddresses.forEach((addr, index) =>
                            { %>
                            <div
                                class="address-item <%= addr.isDefault ? 'default' : '' %>"
                                data-id="<%= addr._id %>"
                                onclick="selectAddress('<%= addr._id %>')"
                            >
                                <div class="d-flex align-items-center mb-2">
                                    <div class="address-type text-capitalize"><%= addr.type %></div>
                                    <%=console.log(addr.isDefault)%> <% if (addr.isDefault) { %>
                                    <span class="default-badge">Default</span>
                                    <% } %>
                                </div>
                                <div class="address-content">
                                    <div class="address-name fw-bold"><%= addr.fname %> <%= addr.sname %></div>
                                    <div class="address-details">
                                        <div><strong>Mobile:</strong> <%= addr.mobile %></div>
                                        <div><strong>Email:</strong> <%= addr.email %></div>
                                        <div><strong>Address:</strong> <%= addr.address %></div>
                                        <div><strong>City:</strong> <%= addr.city %> - <%= addr.pin %></div>
                                    </div>
                                </div>
                            </div>
                            <% }); %> <% } else { %>
                            <div class="text-muted text-center">
                                <p>No saved addresses found. Please add a new address.</p>
                            </div>
                            <% } %>
                        </div>
                        <div class="mt-3">
                            <button type="button" class="btn btn-outline-primary" onclick="showManualAddressForm()">
                                Add New Address
                            </button>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" onclick="confirmAddressSelection()">
                            Confirm Selection
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <script>
                        // Global variables
                        let addressesData = <%- JSON.stringify(userAddresses) %>;
                        let selectedAddressId = '<%= defaultAddress ? defaultAddress._id : "" %>';
                        let cartItems = <%- JSON.stringify(cartItems) %>;
                        let subtotal = <%= subtotal %>;
                        let currentDeliveryCharge = <%= shippingCharge %>;
                        let discount = <%= coupondiscount %>;

                        // Handle address submission
                       function handleAddressSubmit(save = false) {
                const formData = {
                    fname: document.getElementById('fname').value,
                    sname: document.getElementById('sname').value,
                    mobile: document.getElementById('mobile').value,
                    email: document.getElementById('email').value,
                    addressType: document.getElementById('addressType').value,
                    pin: document.getElementById('pin').value,
                    address: document.getElementById('address').value,
                    city: document.getElementById('city').value,
                    isDefault: save
                };

                fetch('/addAddress', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(formData)
                })
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: 'Address added successfully!',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: result.message || 'Failed to add address'
                        });
                    }
                })
                .catch(err => {
                    console.error("Error:", err);
                    Swal.fire({
                        icon: 'error',
                        title: 'Server Error',
                        text: 'Something went wrong, please try again later.'
                    });
                });
            }


                        // Modal functions
                        function showManualAddressForm() {
                            document.getElementById('selectedAddressDisplay').style.display = 'none';
                            document.getElementById('manualAddressInput').style.display = 'block';
                            selectedAddressId = '';
                            const modal = bootstrap.Modal.getInstance(document.getElementById('selectAddressModal'));
                            modal.hide();
                        }

                        function selectAddress(addressId) {
                            document.querySelectorAll('.address-item').forEach(item => {
                                item.classList.remove('selected');
                            });
                            const selectedItem = document.querySelector(`.address-item[data-id="${addressId}"]`);
                            selectedItem.classList.add('selected');
                            selectedAddressId = addressId;
                        }

                        function confirmAddressSelection() {
                            if (!selectedAddressId) {
                                alert('Please select an address or add a new one.');
                                return;
                            }

                            const selectedAddress = addressesData.find(addr => addr._id === selectedAddressId);
                            if (selectedAddress) {
                                document.getElementById('selectedAddressDisplay').innerHTML = `
                                    <p class="mb-1"><strong>${selectedAddress.fname} ${selectedAddress.sname}</strong></p>
                                    <p class="mb-1">${selectedAddress.email}</p>
                                    <p class="mb-1">${selectedAddress.mobile}</p>
                                    <p class="mb-1">${selectedAddress.address}</p>
                                    <p class="mb-0">${selectedAddress.city} - ${selectedAddress.pin}</p>
                                `;
                                document.getElementById('manualAddressInput').style.display = 'none';
                                document.getElementById('selectedAddressDisplay').style.display = 'block';
                            }

                            const modal = bootstrap.Modal.getInstance(document.getElementById('selectAddressModal'));
                            modal.hide();
                        }

                        // Payment selection
                        function selectPayment(method) {
                            
                            document.querySelectorAll('.payment-option').forEach(option => {
                                option.classList.remove('selected');
                            });

                            const selectedOption = document.querySelector(`input[value="${method}"]`).closest('.payment-option');
                            selectedOption.classList.add('selected');
                            document.querySelector(`input[value="${method}"]`).checked = true;

                            // Update delivery charge based on payment method
                            if (method === 'cod') {
                                currentDeliveryCharge = 60;
                            } else {
                                currentDeliveryCharge = <%= shippingCharge %>;
                            }


                        }

                       async function orderSubmit() {
                // Validation checks...
                if (!selectedAddressId && !document.getElementById('fname').value) {
                    Swal.fire({ icon: 'warning', title: 'Missing Address', text: 'Please select an address or fill in address details.' });
                    return;
                }

                const selectedPayment = document.querySelector('input[name="paymentMethod"]:checked');
                if (!selectedPayment) {
                    Swal.fire({ icon: 'warning', title: 'Payment Method Required', text: 'Please select a payment method.' });
                    return;
                }
                if (!document.getElementById('termsAccepted').checked) {
                    Swal.fire({ icon: 'warning', title: 'Terms Not Accepted', text: 'Please accept the terms and conditions.' });
                    return;
                }


                let selectedAddressObject = <%- JSON.stringify(defaultAddress || {}) %>;
            console.log(selectPayment.value==='card',"value");

                // If Razorpay selected, handle payment before placing order
                if (selectedPayment.value === 'card') {
                    try {
                        console.log("hii ramesh");

                        const total = subtotal + currentDeliveryCharge - discount;
                        console.log(total)
                        const res = await fetch("/createOrder", {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({
                                paymentMethod: "razorpay",
                                subtotal: total
                            })
                        });

                        const data = await res.json();
                        if (!data.success) {
                            Swal.fire({ icon: 'error', title: 'Order Creation Failed', text: data.message });
                            return;
                        }

                        const { order_id, amount, currency } = data;
                        // Common function to prepare orderData
            function getOrderData(paymentResponse = null) {
                return {
                    address: selectedAddressObject,
                    paymentMethod: "razorpay",
                    products: cartItems.map(item => ({
                        productId: item.productId?._id,
                        productName: item.name,
                        quantity: item.quantity,
                        size: item.size,
                        price: item.total
                    })),
                    subtotal: subtotal,
                    deliveryCharge: currentDeliveryCharge,
                    discount: discount,
                    total: subtotal + currentDeliveryCharge - discount,
                    paymentResponse // can be null for failure
                };
            }

            // Handle failure
            async function paymentFail(orderId) {
                const failedOrderData = getOrderData(); // no paymentResponse
                console.log("Payment cancelled! 1234", failedOrderData);

                // Optionally send to backend for logging
                try{
                const response =  await fetch("/paymentFailed", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(failedOrderData)
                });
               const data = await response.json();
               console.log(data,"pookies msg");

              if(data.success){
                console.log("fvdbd");

                swal({
                    title:"Payemet Failed",
                    text:data.message,
                    icon:"error",

                }).then(()=>{
                    window.location.href=`/paymentFailGet/${data.orderId}`;
                })
              }else{
                swal({
                    title:"Error",
                    text:data.message,
                    icon:"warning",
                    button:"OK"
                })
            }

            }    catch (err) {
                    swal({
                        title: "Error",
                        text: "Unable to process payment failure.",
                        icon: "warning",
                        button: "OK",
                    });
                }
            }

            // Razorpay options
            const options = {
                key: "rzp_test_lNqP0ShQDBIbqJ",
                amount: amount * 100,
                currency: currency,
                name: "My Store",
                description: "Purchase Payment",
                order_id: order_id,
                // handler: async function (paymentResponse) {
                //     const orderData = getOrderData(paymentResponse);
                //     orderData.subtotal=total
                   
                    
                //     console.log(orderData, "OrderData");

                //     const finalRes = await fetch("/placeOrder", {
                //         method: "POST",
                //         headers: { "Content-Type": "application/json" },
                //         body: JSON.stringify(orderData)
                //     });

                //     const finalData = await finalRes.json();
                //     console.log(finalData,"kumar jii");
                //     // if(finalData.message==="Order placed successfully"){
                //     //     window.location.href =`/thankyou/${finalData.orderId}`;

                //     // }else{

                //     // }
                //     if (finalData.success) {
                //         window.location.href = `/thankyou/${finalData.orderId}`;
                //     } else {
                //         Swal.fire({ icon: 'error', title: 'Order Failed', text: finalData.message });
                //     }
                // },
                handler: async function (paymentResponse) {
    const orderData = getOrderData(paymentResponse);
    orderData.subtotal = total;
    
    // ✅ Add coupon info to backend
    if (appliedCoupon) {
        orderData.coupon = {
            code: appliedCoupon.code,
            discount: appliedCoupon.discount,   // amount reduced
            type: appliedCoupon.type,
            value: appliedCoupon.value
        };
    } else {
        orderData.coupon = null;
    }

    console.log(orderData, "OrderData with Coupon");

    const finalRes = await fetch("/placeOrder", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(orderData)
    });

    const finalData = await finalRes.json();
    console.log(finalData, "Backend Response");
    
    if (finalData.success) {
        window.location.href = `/thankyou/${finalData.orderId}`;
    } else {
        Swal.fire({ icon: 'error', title: 'Order Failed', text: finalData.message });
    }
},

                modal: {
                    ondismiss: function () {
                        paymentFail();
                    }
                },
                prefill: {
                    name: 'Anshi',
                    email: 'anshi@gmail.com',
                    contact: '040845804850'
                },
                theme: { color: "#3399cc" }
            };

            new Razorpay(options).open();

                    } catch (err) {
                        console.error(err);
                        Swal.fire({ icon: 'error', title: 'Server Error', text: 'Something went wrong' });
                    }
                    return; // stop here because Razorpay flow is async
                }



                // COD order
                // const orderData = {
                //     address: selectedAddressObject,
                //     paymentMethod: "cod",
                //     products: cartItems.map(item => ({
                //         productId: item.productId?._id,
                //         productName: item.name,
                //         quantity: item.quantity,
                //         size: item.size,
                //         price: item.total
                //     })),
                //     subtotal: subtotal,
                //     deliveryCharge: currentDeliveryCharge,
                //     discount: discount,
                //     total: subtotal + currentDeliveryCharge - discount
                // };
                const orderData = {
    address: selectedAddressObject,
    paymentMethod: "cod",
    products: cartItems.map(item => ({
        productId: item.productId?._id,
        productName: item.name,
        quantity: item.quantity,
        size: item.size,
        price: item.total
    })),
    subtotal: subtotal,
    deliveryCharge: currentDeliveryCharge,
    discount: discount,   // ✅ send discount
    coupon: appliedCoupon || null,  // ✅ optional
    total: subtotal + currentDeliveryCharge - discount
};


                const res = await fetch("/submitOrder", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(orderData)
                });
                const result = await res.json();
                console.log(result,"result");
                
                console.log(result,"kumaran");
                if(result.message==="Order Successful"){
                    window.location.href=`/thankyou/${result.orderId}`
                    
                }

            }
            

            
        </script>
        <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
        <script>
            async function selectRazorpayPayment(method) {
                try {
                    document.querySelectorAll('.payment-option').forEach(option => {
                    option.classList.remove('selected');
                });
                const selectedOption = document.querySelector(`input[value="card"]`).closest('.payment-option');
                selectedOption.classList.add('selected');
                document.querySelector(`input[value="card"]`).checked = true;

                currentDeliveryCharge = <%= shippingCharge %>;
                } catch (error) {
                    console.error("Error selecting Razorpay payment:", error);
                    alert("Something went kjkhjhkhwrong");
                }
            }
        </script>


<!-- Coupon Modal - Add this after the Select Address Modal -->
<div class="modal fade" id="couponModal" tabindex="-1" aria-labelledby="couponModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="couponModalLabel">
                    <i class="fas fa-ticket-alt me-2"></i>Apply Coupon
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Manual Coupon Input -->
                <div class="mb-4">
                    <div class="input-group">
                        <input type="text" class="form-control" id="manualCouponCode" placeholder="Enter coupon code">
                        <button class="btn btn-outline-primary" type="button" onclick="applyManualCoupon()">
                            Apply
                        </button>
                    </div>
                </div>

                <hr>

                <!-- Available Coupons List -->
                <div class="mb-3">
                    <h6 class="fw-bold">Available Coupons</h6>
                </div>
                
                <div id="couponsList">
                    <%=console.log(coupons,"copdifi")%>
  <% if (coupons && coupons.length > 0) { %>
    <% coupons.forEach(coupon => { %>
      <div class="coupon-item border rounded p-3 mb-3">
        <div class="row align-items-center">
          <div class="col-8">
            <div class="d-flex align-items-center mb-2">
              <span class="badge bg-success me-2"><%= coupon.code %></span>
              <span class="fw-bold">
                <% if(coupon.discountType === 'percentage'){ %>
                  <%= coupon.discountPercentage %>% Off
                <% } else { %>
                  ₹<%= coupon.offerPrice %> Off
                <% } %>
              </span>
            </div>
            <small class="text-muted">
              Get this offer on orders above ₹<%= coupon.minimumPurchase %>
            </small><br>
            <small class="text-success">
              Valid until: <%= coupon.expireOn.toDateString() %>
            </small>
          </div>
          <div class="col-4 text-end">
            <button 
              class="btn btn-primary btn-sm"
              onclick="applyCoupon('<%= coupon.code %>', <%= coupon.discountPercentage || coupon.offerPrice %>, '<%= coupon.discountType %>', <%= coupon.minimumPurchase %>)">
              Apply
            </button>
          </div>
        </div>
      </div>
    <% }) %>
  <% } else { %>
    <p class="text-muted">No coupons available right now.</p>
  <% } %>
</div>


                <!-- Current Applied Coupon -->
                <div id="appliedCouponSection" class="alert alert-success d-none">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <strong id="appliedCouponCode"></strong> applied successfully!
                            <br><small id="appliedCouponDetails"></small>
                        </div>
                        <button class="btn btn-sm btn-outline-danger" onclick="removeCoupon()">
                            Remove
                        </button>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<style>
/* Additional CSS for coupon modal */
.coupon-item {
    transition: all 0.2s ease;
}

.coupon-item:hover {
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    transform: translateY(-1px);
}

.coupon-item .badge {
    font-family: monospace;
    font-weight: bold;
}
</style>

<script>
// Coupon related JavaScript functions
let appliedCoupon = null;

function applyManualCoupon() {
    const couponCode = document.getElementById('manualCouponCode').value.trim();
    if (!couponCode) {
        Swal.fire({
            icon: 'warning',
            title: 'Invalid Input',
            text: 'Please enter a coupon code'
        });
        return;
    }

    // Here you would typically make an API call to validate the coupon
    // For demo purposes, I'll simulate validation
    validateAndApplyCoupon(couponCode);
}

function validateAndApplyCoupon(couponCode) {
    // Simulate API call to validate coupon
    // Replace this with actual API call to your backend
    fetch('/validateCoupon', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ couponCode, subtotal })
    })
    .then(response => response.json())
    .then(result => {
        if (result.success) {
            applyCoupon(result.couponCode, result.discount, result.type, result.minAmount);
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Invalid Coupon',
                text: result.message || 'Coupon code is not valid or has expired'
            });
        }
    })
    .catch(err => {
        console.error('Error validating coupon:', err);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to validate coupon. Please try again.'
        });
    });
}

function applyCoupon(couponCode, discountValue, discountType, minAmount) {
    // Check minimum order amount
    if (subtotal < minAmount) {
        Swal.fire({
            icon: 'warning',
            title: 'Minimum Order Not Met',
            text: `This coupon requires a minimum order of ₹${minAmount}`
        });
        return;
    }

    // Calculate discount
    let discountAmount = 0;
    if (discountType === 'percentage') {
        discountAmount = Math.min((subtotal * discountValue) / 100, subtotal);
    } else if (discountType === 'fixed') {
        discountAmount = Math.min(discountValue, subtotal);
    }

    // Apply the coupon
    appliedCoupon = {
        code: couponCode,
        discount: discountAmount,
        type: discountType,
        value: discountValue
    };

    // Update discount in the UI
    discount = discountAmount;
    updateOrderSummary();

    // Show applied coupon section
    document.getElementById('appliedCouponCode').textContent = couponCode;
    document.getElementById('appliedCouponDetails').textContent = 
        `You saved ₹${discountAmount.toFixed(2)}`;
    document.getElementById('appliedCouponSection').classList.remove('d-none');

    // Update apply coupon button text
    document.getElementById('applyCouponBtn').innerHTML = 
        `<i class="fas fa-ticket-alt me-1"></i>${couponCode} Applied`;
    document.getElementById('applyCouponBtn').classList.remove('btn-outline-primary');
    document.getElementById('applyCouponBtn').classList.add('btn-success');

    // Clear manual input
    document.getElementById('manualCouponCode').value = '';

    // Show success message
    Swal.fire({
        icon: 'success',
        title: 'Coupon Applied!',
        text: `You saved ₹${discountAmount.toFixed(2)}`,
        timer: 1500,
        showConfirmButton: false
    });

    // Close modal
    setTimeout(() => {
        const modal = bootstrap.Modal.getInstance(document.getElementById('couponModal'));
        modal.hide();
    }, 1500);
}

function removeCoupon() {
    appliedCoupon = null;
    discount = 0;
    updateOrderSummary();

    // Hide applied coupon section
    document.getElementById('appliedCouponSection').classList.add('d-none');

    // Reset apply coupon button
    document.getElementById('applyCouponBtn').innerHTML = 
        'Apply Coupon';
    document.getElementById('applyCouponBtn').classList.remove('btn-success');
    document.getElementById('applyCouponBtn').classList.add('btn-outline-primary');

    Swal.fire({
        icon: 'info',
        title: 'Coupon Removed',
        text: 'Coupon has been removed from your order',
        timer: 1500,
        showConfirmButton: false
    });
}

function updateOrderSummary() {
    // Update discount amount
    document.getElementById('discountAmount').textContent = `-₹${discount}`;
    
    // Update total amount
    const total = subtotal + currentDeliveryCharge - discount;
    document.getElementById('totalAmount').textContent = `₹${total}`;
}

// Load available coupons when modal opens
document.getElementById('couponModal').addEventListener('show.bs.modal', function () {
    loadAvailableCoupons();
});

function loadAvailableCoupons() {
    // This function would typically fetch coupons from your backend
    // For now, the coupons are statically defined in the HTML
    // You can replace this with an API call:
    

    fetch('/getAvailableCoupons')
    .then(response => response.json())
    .then(coupons => {
        const couponsList = document.getElementById('couponsList');
        couponsList.innerHTML = '';
        
        coupons.forEach(coupon => {
            const couponHTML = `
                <div class="coupon-item border rounded p-3 mb-3">
                    <div class="row align-items-center">
                        <div class="col-8">
                            <div class="d-flex align-items-center mb-2">
                                <span class="badge bg-primary me-2">${coupon.code}</span>
                                <span class="fw-bold">${coupon.title}</span>
                            </div>
                            <small class="text-muted">${coupon.description}</small><br>
                            <small class="text-success">Valid until: ${coupon.expiryDate}</small>
                        </div>
                        <div class="col-4 text-end">
                            <button class="btn btn-primary btn-sm" onclick="applyCoupon('${coupon.code}', ${coupon.discount}, '${coupon.type}', ${coupon.minAmount})">
                                Apply
                            </button>
                        </div>
                    </div>
                </div>`;
            couponsList.innerHTML += couponHTML;
        });
    })
    .catch(err => console.error('Error loading coupons:', err));
   
}
</script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

        <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    </body>
</html>